{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { tap } from 'rxjs';\nexport let SingleFaceSnapComponent = class SingleFaceSnapComponent {\n  constructor(faceSnapsService, route) {\n    this.faceSnapsService = faceSnapsService;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.buttonText = 'DarkMode';\n    const faceSnapId = +this.route.snapshot.params['id'];\n    this.faceSnap$ = this.faceSnapsService.getFaceSnapById(faceSnapId);\n  }\n  onSnap(faceSnapId) {\n    if (this.buttonText === 'DarkMode') {\n      this.faceSnap$ = this.faceSnapsService.snapFaceSnapById(faceSnapId, 'snap').pipe(tap(() => this.buttonText = 'GreenMode'));\n    } else {\n      this.faceSnap$ = this.faceSnapsService.snapFaceSnapById(faceSnapId, 'unsnap').pipe(tap(() => this.buttonText = 'DarkMode'));\n    }\n  }\n};\nSingleFaceSnapComponent = __decorate([Component({\n  selector: 'app-single-face-snap',\n  templateUrl: './single-face-snap.component.html',\n  styleUrls: ['./single-face-snap.component.scss']\n})], SingleFaceSnapComponent);","map":{"version":3,"names":["Component","tap","SingleFaceSnapComponent","constructor","faceSnapsService","route","ngOnInit","buttonText","faceSnapId","snapshot","params","faceSnap$","getFaceSnapById","onSnap","snapFaceSnapById","pipe","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\code\\Exp-sharing\\client\\src\\app\\face-snaps\\components\\single-face-snap\\single-face-snap.component.ts"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { FaceSnap } from '../../../core/models/face-snap.models';\nimport { FaceSnapsServices } from '../../../core/services/face-snap.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, tap } from 'rxjs';\n\n\n@Component({\n  selector: 'app-single-face-snap',\n  templateUrl: './single-face-snap.component.html',\n  styleUrls: ['./single-face-snap.component.scss']\n})\nexport class SingleFaceSnapComponent implements OnInit{\n  faceSnap$! : Observable<FaceSnap>\n  buttonText!: string;\n\n  constructor(\n    private faceSnapsService : FaceSnapsServices,\n    private route : ActivatedRoute\n    ){}\n\n  ngOnInit() {\n    this.buttonText= 'DarkMode'\n    const faceSnapId = +this.route.snapshot.params['id']\n    this.faceSnap$ = this.faceSnapsService.getFaceSnapById(faceSnapId)\n  }\n  onSnap(faceSnapId: number) {\n    if (this.buttonText === 'DarkMode') {\n        this.faceSnap$ = this.faceSnapsService.snapFaceSnapById(faceSnapId, 'snap').pipe(\n            tap(() => this.buttonText = 'GreenMode')\n        );\n    } else {\n        this.faceSnap$ = this.faceSnapsService.snapFaceSnapById(faceSnapId, 'unsnap').pipe(\n            tap(() => this.buttonText = 'DarkMode')\n        );\n    }\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAIhD,SAAqBC,GAAG,QAAQ,MAAM;AAQ/B,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAIlCC,YACUC,gBAAoC,EACpCC,KAAsB;IADtB,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,KAAK,GAALA,KAAK;EACX;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAE,UAAU;IAC3B,MAAMC,UAAU,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACP,gBAAgB,CAACQ,eAAe,CAACJ,UAAU,CAAC;EACpE;EACAK,MAAMA,CAACL,UAAkB;IACvB,IAAI,IAAI,CAACD,UAAU,KAAK,UAAU,EAAE;MAChC,IAAI,CAACI,SAAS,GAAG,IAAI,CAACP,gBAAgB,CAACU,gBAAgB,CAACN,UAAU,EAAE,MAAM,CAAC,CAACO,IAAI,CAC5Ed,GAAG,CAAC,MAAM,IAAI,CAACM,UAAU,GAAG,WAAW,CAAC,CAC3C;KACJ,MAAM;MACH,IAAI,CAACI,SAAS,GAAG,IAAI,CAACP,gBAAgB,CAACU,gBAAgB,CAACN,UAAU,EAAE,QAAQ,CAAC,CAACO,IAAI,CAC9Ed,GAAG,CAAC,MAAM,IAAI,CAACM,UAAU,GAAG,UAAU,CAAC,CAC1C;;EAEP;CACD;AAzBYL,uBAAuB,GAAAc,UAAA,EALnChB,SAAS,CAAC;EACTiB,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACWjB,uBAAuB,CAyBnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}