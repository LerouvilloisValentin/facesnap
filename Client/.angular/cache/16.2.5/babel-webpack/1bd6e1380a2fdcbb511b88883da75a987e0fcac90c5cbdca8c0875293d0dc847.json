{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FaceSnapsServices {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllFaceSnaps() {\n    return this.http.get('http://localhost:3000/facesnaps');\n  }\n  getFaceSnapById(faceSnapId) {\n    return this.http.get(`http://localhost:3000/facesnaps/${faceSnapId}`);\n  }\n  snapFaceSnapById(faceSnapId, snapType) {\n    return this.getFaceSnapById(faceSnapId).pipe(map(this.faceSnap, {\n      ...faceSnap,\n      snaps: faceSnap.snaps + snapType === 'w'\n    }));\n  }\n  addFaceSnap(formValue) {\n    const faceSnap = {\n      ...formValue,\n      snaps: 0,\n      createdDate: new Date(),\n      id: this.faceSnaps[this.faceSnaps.length - 1].id + 1\n    };\n    this.faceSnaps.push(faceSnap);\n  }\n  static #_ = this.ɵfac = function FaceSnapsServices_Factory(t) {\n    return new (t || FaceSnapsServices)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FaceSnapsServices,\n    factory: FaceSnapsServices.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FaceSnapsServices","constructor","http","getAllFaceSnaps","get","getFaceSnapById","faceSnapId","snapFaceSnapById","snapType","pipe","map","faceSnap","snaps","addFaceSnap","formValue","createdDate","Date","id","faceSnaps","length","push","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\code\\snapface\\client\\src\\app\\services\\face-snap.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { FaceSnap } from \"../models/face-snap.models\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class FaceSnapsServices {\r\n  faceSnap! : FaceSnap\r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n  getAllFaceSnaps(): Observable<FaceSnap[]> {\r\n    return this.http.get<FaceSnap[]>('http://localhost:3000/facesnaps')\r\n  }\r\n\r\n  getFaceSnapById(faceSnapId: number): Observable<FaceSnap> {\r\n    return this.http.get<FaceSnap>(`http://localhost:3000/facesnaps/${faceSnapId}`)\r\n\r\n  }\r\n  snapFaceSnapById(faceSnapId: number, snapType: 'snap' | 'unsnap'): Observable<FaceSnap> {\r\n    return this.getFaceSnapById(faceSnapId).pipe(\r\n      map(this.faceSnap => ({\r\n        ...faceSnap,\r\n        snaps: faceSnap.snaps + snapType === 'w'\r\n      })  )\r\n    )\r\n  }\r\n\r\n  addFaceSnap(formValue: { title: string, description: string, imageUrl: string, location?: string }) {\r\n    const faceSnap: FaceSnap = {\r\n        ...formValue,\r\n        snaps: 0,\r\n        createdDate: new Date(),\r\n        id: this.faceSnaps[this.faceSnaps.length - 1].id + 1\r\n    };\r\n    this.faceSnaps.push(faceSnap);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAc;EAEtCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,iCAAiC,CAAC;EACrE;EAEAC,eAAeA,CAACC,UAAkB;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAW,mCAAmCE,UAAU,EAAE,CAAC;EAEjF;EACAC,gBAAgBA,CAACD,UAAkB,EAAEE,QAA2B;IAC9D,OAAO,IAAI,CAACH,eAAe,CAACC,UAAU,CAAC,CAACG,IAAI,CAC1CC,GAAG,CAAC,IAAI,CAACC,QAAQ,EAAK;MACpB,GAAGA,QAAQ;MACXC,KAAK,EAAED,QAAQ,CAACC,KAAK,GAAGJ,QAAQ,KAAK;KACrC,CAAG,CACN;EACH;EAEAK,WAAWA,CAACC,SAAsF;IAChG,MAAMH,QAAQ,GAAa;MACvB,GAAGG,SAAS;MACZF,KAAK,EAAE,CAAC;MACRG,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,EAAE,EAAE,IAAI,CAACC,SAAS,CAAC,IAAI,CAACA,SAAS,CAACC,MAAM,GAAG,CAAC,CAAC,CAACF,EAAE,GAAG;KACtD;IACD,IAAI,CAACC,SAAS,CAACE,IAAI,CAACT,QAAQ,CAAC;EAC/B;EAAC,QAAAU,CAAA,G;qBA9BUrB,iBAAiB,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjB1B,iBAAiB;IAAA2B,OAAA,EAAjB3B,iBAAiB,CAAA4B,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}