{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/culinaire.service\";\nimport * as i2 from \"src/app/core/services/face-snap.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    snapped: a0\n  };\n};\nfunction SingleCulinaireComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵtext(5, \"Back\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"img\", 4);\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\")(13, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function SingleCulinaireComponent_div_2_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const faceSnap_r2 = restoredCtx.ngIf;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSnap(faceSnap_r2.id));\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const faceSnap_r2 = ctx.ngIf;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r1.buttonText === \"DarkMode\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 7, faceSnap_r2.title));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", faceSnap_r2.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", faceSnap_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(faceSnap_r2.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Mise en ligne le \", i0.ɵɵpipeBind2(11, 9, faceSnap_r2.createdDate, \"longDate\"), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.buttonText);\n  }\n}\nexport class SingleCulinaireComponent {\n  constructor(culinaireService, faceSnapsService, route) {\n    this.culinaireService = culinaireService;\n    this.faceSnapsService = faceSnapsService;\n    this.route = route;\n  }\n  ngOnInit() {\n    const culinaireId = +this.route.snapshot.params['id'];\n    this.faceSnap$ = this.culinaireService.getculinaireById(culinaireId);\n  }\n  onSnap(faceSnapId) {\n    if (this.buttonText === 'DarkMode') {\n      this.faceSnap$ = this.faceSnapsService.snapFaceSnapById(faceSnapId, 'snap').pipe(tap(() => this.buttonText = 'GreenMode'));\n    } else {\n      this.faceSnap$ = this.faceSnapsService.snapFaceSnapById(faceSnapId, 'unsnap').pipe(tap(() => this.buttonText = 'DarkMode'));\n    }\n  }\n  static #_ = this.ɵfac = function SingleCulinaireComponent_Factory(t) {\n    return new (t || SingleCulinaireComponent)(i0.ɵɵdirectiveInject(i1.CulinaireServices), i0.ɵɵdirectiveInject(i2.FaceSnapsServices), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SingleCulinaireComponent,\n    selectors: [[\"app-single-culinaire\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[\"contentToReuse\", \"\"], [\"class\", \"face-snap-card\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"face-snap-card\", 3, \"ngClass\"], [\"routerLink\", \"/culinaire\", 2, \"color\", \"white\"], [3, \"src\", \"alt\"], [2, \"color\", \"white\", 3, \"click\"]],\n    template: function SingleCulinaireComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0, null, 0);\n        i0.ɵɵtemplate(2, SingleCulinaireComponent_div_2_Template, 15, 14, \"div\", 1);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementContainerEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx.faceSnap$));\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i3.RouterLink, i4.AsyncPipe, i4.TitleCasePipe, i4.DatePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","SingleCulinaireComponent_div_2_Template_button_click_13_listener","restoredCtx","ɵɵrestoreView","_r4","faceSnap_r2","ngIf","ctx_r3","ɵɵnextContext","ɵɵresetView","onSnap","id","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r1","buttonText","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","title","imageUrl","ɵɵsanitizeUrl","description","ɵɵtextInterpolate1","ɵɵpipeBind2","createdDate","SingleCulinaireComponent","constructor","culinaireService","faceSnapsService","route","ngOnInit","culinaireId","snapshot","params","faceSnap$","getculinaireById","faceSnapId","snapFaceSnapById","pipe","_","ɵɵdirectiveInject","i1","CulinaireServices","i2","FaceSnapsServices","i3","ActivatedRoute","_2","selectors","decls","vars","consts","template","SingleCulinaireComponent_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtemplate","SingleCulinaireComponent_div_2_Template","ɵɵelementContainerEnd"],"sources":["C:\\code\\Exp-sharing\\client\\src\\app\\Culinaire\\components\\single-culinaire\\single-culinaire.component.ts","C:\\code\\Exp-sharing\\client\\src\\app\\Culinaire\\components\\single-culinaire\\single-culinaire.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FaceSnap } from 'src/app/core/models/face-snap.models';\nimport { CulinaireServices } from 'src/app/core/services/culinaire.service';\nimport { Observable, tap } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { FaceSnapsServices } from 'src/app/core/services/face-snap.service';\n\n\n@Component({\n  selector: 'app-single-culinaire',\n  templateUrl: './single-culinaire.component.html',\n  styleUrls: ['./single-culinaire.component.scss']\n})\nexport class SingleCulinaireComponent {\n  faceSnap$! : Observable<FaceSnap>\n  buttonText!: string;\n\n  constructor(\n    private  culinaireService : CulinaireServices,\n    private  faceSnapsService : FaceSnapsServices,\n    private route : ActivatedRoute\n    ){}\n\n  ngOnInit() :void {\n    \n    const culinaireId = +this.route.snapshot.params['id']\n    this.faceSnap$ = this.culinaireService.getculinaireById(culinaireId)\n  }\n  onSnap(faceSnapId: number) {\n    if (this.buttonText === 'DarkMode') {\n        this.faceSnap$ = this.faceSnapsService.snapFaceSnapById(faceSnapId, 'snap').pipe(\n            tap(() => this.buttonText = 'GreenMode')\n        );\n    } else {\n        this.faceSnap$ = this.faceSnapsService.snapFaceSnapById(faceSnapId, 'unsnap').pipe(\n            tap(() => this.buttonText = 'DarkMode')\n        );\n    }\n  }\n}\n","<ng-container #contentToReuse>\n<div class=\"face-snap-card\"\n[ngClass]=\"{snapped : buttonText === 'DarkMode'}\"\n*ngIf=\"faceSnap$ | async as faceSnap\">\n<h2>{{ faceSnap.title | titlecase }}</h2>\n<button routerLink=\"/culinaire\" style=\"color:white\">Back</button>\n<img [src]=\"faceSnap.imageUrl\" [alt]=\"faceSnap.title\" >\n<p>{{ faceSnap.description }}</p>\n<p>Mise en ligne le {{ faceSnap.createdDate | date: 'longDate'}}</p>\n<p>\n  <button style=\"color:white\" (click)=\"onSnap(faceSnap.id)\">{{buttonText}}</button>\n <!-- <span [ngStyle]=\"{ color: 'rgb(0,'+ faceSnap.snaps +',0)'}\"> {{ faceSnap.snaps }}</span> -->\n</p>\n</div>\n</ng-container>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}