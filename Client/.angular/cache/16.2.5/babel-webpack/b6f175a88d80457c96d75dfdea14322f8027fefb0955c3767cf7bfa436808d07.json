{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FaceSnapsServices {\n  constructor(http) {\n    this.http = http;\n    this.faceSnaps = [{\n      id: 1,\n      title: 'sunset ou 107',\n      description: 'Mon bestFriend',\n      createdDate: new Date(),\n      snaps: 25,\n      imageUrl: '../assets/image/tree.jpg',\n      location: \"alençon\"\n    }, {\n      id: 2,\n      title: 'bout de boit',\n      description: 'Mon badFriend',\n      createdDate: new Date(),\n      snaps: 7,\n      imageUrl: '../assets/image/tori.jpg',\n      location: \"toulouse\"\n    }, {\n      id: 3,\n      title: 'ourson romantique',\n      description: 'Mon bro',\n      createdDate: new Date(),\n      snaps: 17,\n      imageUrl: 'https://cdn.pixabay.com/photo/2015/05/31/16/03/teddy-bear-792273_1280.jpg'\n    }];\n  }\n  getAllFaceSnaps() {\n    return this.http.get('api/faceSnaps');\n  }\n  getFaceSnapById(faceSnapId) {\n    const faceSnap = this.faceSnaps.find(faceSnap => faceSnap.id === faceSnapId);\n    if (!faceSnap) {\n      throw new Error('FaceSnap not found!');\n    } else {\n      return faceSnap;\n    }\n  }\n  snapFaceSnapById(faceSnapId, snapType) {\n    const faceSnap = this.getFaceSnapById(faceSnapId);\n    snapType === 'snap' ? faceSnap.snaps++ : faceSnap.snaps--;\n  }\n  addFaceSnap(formValue) {\n    const faceSnap = {\n      ...formValue,\n      snaps: 0,\n      createdDate: new Date(),\n      id: this.faceSnaps[this.faceSnaps.length - 1].id + 1\n    };\n    this.faceSnaps.push(faceSnap);\n  }\n  static #_ = this.ɵfac = function FaceSnapsServices_Factory(t) {\n    return new (t || FaceSnapsServices)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FaceSnapsServices,\n    factory: FaceSnapsServices.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FaceSnapsServices","constructor","http","faceSnaps","id","title","description","createdDate","Date","snaps","imageUrl","location","getAllFaceSnaps","get","getFaceSnapById","faceSnapId","faceSnap","find","Error","snapFaceSnapById","snapType","addFaceSnap","formValue","length","push","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\code\\snapface\\src\\app\\services\\face-snap.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { FaceSnap } from \"../models/face-snap.models\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class FaceSnapsServices {\r\n\r\n  constructor( private http : HttpClient) {}\r\n\r\n  faceSnaps : FaceSnap[] = [\r\n    {\r\n      id:1,\r\n      title : 'sunset ou 107',\r\n      description : 'Mon bestFriend',\r\n      createdDate : new Date(),\r\n      snaps : 25,\r\n      imageUrl : '../assets/image/tree.jpg',\r\n      location : \"alençon\",\r\n    },\r\n\r\n    {\r\n        id:2,\r\n        title :'bout de boit',\r\n        description : 'Mon badFriend',\r\n        createdDate : new Date(),\r\n        snaps: 7,\r\n        imageUrl : '../assets/image/tori.jpg',\r\n        location : \"toulouse\",\r\n    },\r\n\r\n    {\r\n        id:3,\r\n        title :'ourson romantique',\r\n        description : 'Mon bro',\r\n        createdDate : new Date(),\r\n        snaps: 17,\r\n        imageUrl : 'https://cdn.pixabay.com/photo/2015/05/31/16/03/teddy-bear-792273_1280.jpg',\r\n\r\n    },\r\n  ]\r\n\r\n  getAllFaceSnaps(): Observable<FaceSnap[]>{\r\n    return this.http.get<FaceSnap[]>('api/faceSnaps')\r\n  }\r\n\r\n  getFaceSnapById(faceSnapId: number): FaceSnap {\r\n    const faceSnap = this.faceSnaps.find(faceSnap => faceSnap.id === faceSnapId);\r\n    if (!faceSnap) {\r\n        throw new Error('FaceSnap not found!');\r\n    } else {\r\n        return faceSnap;\r\n    }\r\n  }\r\n  snapFaceSnapById(faceSnapId: number, snapType: 'snap' | 'unsnap'): void {\r\n    const faceSnap = this.getFaceSnapById(faceSnapId);\r\n    snapType === 'snap' ? faceSnap.snaps++ : faceSnap.snaps--;\r\n  }\r\n\r\n  addFaceSnap(formValue: { title: string, description: string, imageUrl: string, location?: string }) {\r\n    const faceSnap: FaceSnap = {\r\n        ...formValue,\r\n        snaps: 0,\r\n        createdDate: new Date(),\r\n        id: this.faceSnaps[this.faceSnaps.length - 1].id + 1\r\n    };\r\n    this.faceSnaps.push(faceSnap);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAqBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAEzB,KAAAC,SAAS,GAAgB,CACvB;MACEC,EAAE,EAAC,CAAC;MACJC,KAAK,EAAG,eAAe;MACvBC,WAAW,EAAG,gBAAgB;MAC9BC,WAAW,EAAG,IAAIC,IAAI,EAAE;MACxBC,KAAK,EAAG,EAAE;MACVC,QAAQ,EAAG,0BAA0B;MACrCC,QAAQ,EAAG;KACZ,EAED;MACIP,EAAE,EAAC,CAAC;MACJC,KAAK,EAAE,cAAc;MACrBC,WAAW,EAAG,eAAe;MAC7BC,WAAW,EAAG,IAAIC,IAAI,EAAE;MACxBC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAG,0BAA0B;MACrCC,QAAQ,EAAG;KACd,EAED;MACIP,EAAE,EAAC,CAAC;MACJC,KAAK,EAAE,mBAAmB;MAC1BC,WAAW,EAAG,SAAS;MACvBC,WAAW,EAAG,IAAIC,IAAI,EAAE;MACxBC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAG;KAEd,CACF;EAhCwC;EAkCzCE,eAAeA,CAAA;IACb,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAa,eAAe,CAAC;EACnD;EAEAC,eAAeA,CAACC,UAAkB;IAChC,MAAMC,QAAQ,GAAG,IAAI,CAACb,SAAS,CAACc,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAACZ,EAAE,KAAKW,UAAU,CAAC;IAC5E,IAAI,CAACC,QAAQ,EAAE;MACX,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;KACzC,MAAM;MACH,OAAOF,QAAQ;;EAErB;EACAG,gBAAgBA,CAACJ,UAAkB,EAAEK,QAA2B;IAC9D,MAAMJ,QAAQ,GAAG,IAAI,CAACF,eAAe,CAACC,UAAU,CAAC;IACjDK,QAAQ,KAAK,MAAM,GAAGJ,QAAQ,CAACP,KAAK,EAAE,GAAGO,QAAQ,CAACP,KAAK,EAAE;EAC3D;EAEAY,WAAWA,CAACC,SAAsF;IAChG,MAAMN,QAAQ,GAAa;MACvB,GAAGM,SAAS;MACZb,KAAK,EAAE,CAAC;MACRF,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBJ,EAAE,EAAE,IAAI,CAACD,SAAS,CAAC,IAAI,CAACA,SAAS,CAACoB,MAAM,GAAG,CAAC,CAAC,CAACnB,EAAE,GAAG;KACtD;IACD,IAAI,CAACD,SAAS,CAACqB,IAAI,CAACR,QAAQ,CAAC;EAC/B;EAAC,QAAAS,CAAA,G;qBA7DUzB,iBAAiB,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjB9B,iBAAiB;IAAA+B,OAAA,EAAjB/B,iBAAiB,CAAAgC,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}