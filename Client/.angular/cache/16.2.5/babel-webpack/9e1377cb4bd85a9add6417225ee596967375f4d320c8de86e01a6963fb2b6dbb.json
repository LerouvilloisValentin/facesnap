{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CulinaireServices {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllCulinaire() {\n    return this.http.get('http://localhost:3000/culinaire');\n  }\n  getculinaireById(culinaireId) {\n    return this.http.get(`http://localhost:3000/culinaire/${culinaireId}`);\n  }\n  static #_ = this.ɵfac = function CulinaireServices_Factory(t) {\n    return new (t || CulinaireServices)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CulinaireServices,\n    factory: CulinaireServices.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CulinaireServices","constructor","http","getAllCulinaire","get","getculinaireById","culinaireId","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\code\\Exp-sharing\\client\\src\\app\\core\\services\\culinaire.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { FaceSnap } from \"../models/face-snap.models\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, map, switchMap } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class CulinaireServices {\r\n  faceSnap! : FaceSnap\r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n  getAllCulinaire(): Observable<FaceSnap[]> {\r\n    return this.http.get<FaceSnap[]>('http://localhost:3000/culinaire')\r\n  }\r\n\r\n  getculinaireById(culinaireId: number): Observable<FaceSnap> {\r\n    return this.http.get<FaceSnap>(`http://localhost:3000/culinaire/${culinaireId}`)\r\n\r\n  }\r\n  // snapFaceSnapById(faceSnapId: number, snapType: 'snap' | 'unsnap'): Observable<FaceSnap> {\r\n  //   return this.getFaceSnapById(faceSnapId).pipe(\r\n  //     map(faceSnap => ({\r\n  //       ...faceSnap,\r\n  //       snaps: faceSnap.snaps + (snapType === 'snap'? 1 : -1)\r\n  //     })),\r\n  //     switchMap(updateFaceSnap => this.http.put<FaceSnap>(`http://localhost:3000/facesnaps/${faceSnapId}`, updateFaceSnap))\r\n  //   )\r\n  // }\r\n\r\n\r\n  // addCulinaireExp(formValue: { title: string, description: string, imageUrl: string, location?: string }) : Observable<FaceSnap> {\r\n  //  return this.getAllCulinaire().pipe(\r\n  //   map(facesnaps => [...facesnaps].sort((a:FaceSnap, b: FaceSnap) => a.id - b.id)),\r\n  //   map(sortedFacesnaps => sortedFacesnaps[sortedFacesnaps.length - 1]),\r\n  //   map(previousFacesnaps => ({\r\n  //     ...formValue,\r\n  //     snaps:0,\r\n  //     createdDate: new Date(),\r\n  //     id: previousFacesnaps.id + 1\r\n  //   })),\r\n  //   switchMap(newFacesnap=> this.http.post<FaceSnap>('http://localhost:3000/culinaire', newFacesnap))\r\n  //  )\r\n  // }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAc;EAEtCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,iCAAiC,CAAC;EACrE;EAEAC,gBAAgBA,CAACC,WAAmB;IAClC,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAW,mCAAmCE,WAAW,EAAE,CAAC;EAElF;EAAC,QAAAC,CAAA,G;qBAZUP,iBAAiB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBZ,iBAAiB;IAAAa,OAAA,EAAjBb,iBAAiB,CAAAc,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}