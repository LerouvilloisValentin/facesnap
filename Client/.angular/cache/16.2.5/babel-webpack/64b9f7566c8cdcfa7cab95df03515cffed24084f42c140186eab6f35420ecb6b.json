{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport class AuthInterceptor {\n  constructor(auth) {\n    this.auth = auth;\n  }\n  intercept(req, next) {\n    const headers = new HttpHeaders().append(\"Authorization\", `Bearer ${this.auth.getToken()}`);\n    const modifiedReq = req.clone({\n      headers\n    });\n    return next.handle(modifiedReq);\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["HttpHeaders","AuthInterceptor","constructor","auth","intercept","req","next","headers","append","getToken","modifiedReq","clone","handle","_","i0","ɵɵinject","i1","AuthService","_2","factory","ɵfac"],"sources":["C:\\code\\Exp-sharing\\client\\src\\app\\core\\interceptors\\auth.interceptor.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private auth : AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const headers = new HttpHeaders()\r\n    .append(\"Authorization\", `Bearer ${this.auth.getToken()}`)\r\n    const modifiedReq = req.clone({ headers })\r\n    return next.handle(modifiedReq)\r\n  }\r\n}"],"mappings":"AAAA,SAAiCA,WAAW,QAAsC,sBAAsB;;;AAMxG,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAkB;IAAlB,KAAAA,IAAI,GAAJA,IAAI;EAAiB;EAEzCC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,OAAO,GAAG,IAAIP,WAAW,EAAE,CAChCQ,MAAM,CAAC,eAAe,EAAE,UAAU,IAAI,CAACL,IAAI,CAACM,QAAQ,EAAE,EAAE,CAAC;IAC1D,MAAMC,WAAW,GAAGL,GAAG,CAACM,KAAK,CAAC;MAAEJ;IAAO,CAAE,CAAC;IAC1C,OAAOD,IAAI,CAACM,MAAM,CAACF,WAAW,CAAC;EACjC;EAAC,QAAAG,CAAA,G;qBATUZ,eAAe,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfjB,eAAe;IAAAkB,OAAA,EAAflB,eAAe,CAAAmB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}