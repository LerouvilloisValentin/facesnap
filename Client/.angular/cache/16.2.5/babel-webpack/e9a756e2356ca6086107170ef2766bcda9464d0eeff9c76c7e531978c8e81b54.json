{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/culinaire.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    snapped: a0\n  };\n};\nfunction SingleCulinaireComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵtext(5, \"Back\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"img\", 4);\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 5);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"p\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const faceSnap_r2 = ctx.ngIf;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx_r1.buttonText === \"DarkMode\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 6, faceSnap_r2.title));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", faceSnap_r2.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", faceSnap_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(faceSnap_r2.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Mise en ligne le \", i0.ɵɵpipeBind2(11, 8, faceSnap_r2.createdDate, \"longDate\"), \"\");\n  }\n}\nexport class SingleCulinaireComponent {\n  constructor(culinaireService, route) {\n    this.culinaireService = culinaireService;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.buttonText = 'DarkMode';\n    const culinaireId = +this.route.snapshot.params['id'];\n    this.faceSnap$ = this.culinaireService.getculinaireById(culinaireId);\n  }\n  onSnap(faceSnapId) {\n    if (this.buttonText === 'DarkMode') {\n      tap(() => this.buttonText = 'GreenMode');\n    } else {\n      tap(() => this.buttonText = 'DarkMode');\n    }\n  }\n  static #_ = this.ɵfac = function SingleCulinaireComponent_Factory(t) {\n    return new (t || SingleCulinaireComponent)(i0.ɵɵdirectiveInject(i1.CulinaireServices), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SingleCulinaireComponent,\n    selectors: [[\"app-single-culinaire\"]],\n    decls: 4,\n    vars: 3,\n    consts: [[\"contentToReuse\", \"\"], [\"class\", \"face-snap-card\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"face-snap-card\", 3, \"ngClass\"], [\"routerLink\", \"/culinaire\", 2, \"color\", \"white\"], [3, \"src\", \"alt\"], [2, \"color\", \"rgb(199, 86, 86)\"]],\n    template: function SingleCulinaireComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0, null, 0);\n        i0.ɵɵtemplate(2, SingleCulinaireComponent_div_2_Template, 13, 13, \"div\", 1);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementContainerEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx.faceSnap$));\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i2.RouterLink, i3.AsyncPipe, i3.TitleCasePipe, i3.DatePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r1","buttonText","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","faceSnap_r2","title","imageUrl","ɵɵsanitizeUrl","description","ɵɵtextInterpolate1","ɵɵpipeBind2","createdDate","SingleCulinaireComponent","constructor","culinaireService","route","ngOnInit","culinaireId","snapshot","params","faceSnap$","getculinaireById","onSnap","faceSnapId","_","ɵɵdirectiveInject","i1","CulinaireServices","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","SingleCulinaireComponent_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtemplate","SingleCulinaireComponent_div_2_Template","ɵɵelementContainerEnd"],"sources":["C:\\code\\Exp-sharing\\client\\src\\app\\Culinaire\\components\\single-culinaire\\single-culinaire.component.ts","C:\\code\\Exp-sharing\\client\\src\\app\\Culinaire\\components\\single-culinaire\\single-culinaire.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FaceSnap } from 'src/app/core/models/face-snap.models';\nimport { CulinaireServices } from 'src/app/core/services/culinaire.service';\nimport { Observable, tap } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { FaceSnapsServices } from 'src/app/core/services/face-snap.service';\n\n\n@Component({\n  selector: 'app-single-culinaire',\n  templateUrl: './single-culinaire.component.html',\n  styleUrls: ['./single-culinaire.component.scss']\n})\nexport class SingleCulinaireComponent {\n  faceSnap$! : Observable<FaceSnap>\n  buttonText!: string;\n\n  constructor(\n    private  culinaireService : CulinaireServices,\n    private route : ActivatedRoute\n    ){}\n\n  ngOnInit() :void {\n    this.buttonText= 'DarkMode'\n    const culinaireId = +this.route.snapshot.params['id']\n    this.faceSnap$ = this.culinaireService.getculinaireById(culinaireId)\n  }\n  onSnap(faceSnapId: number) {\n    if (this.buttonText === 'DarkMode') {\n            tap(() => this.buttonText = 'GreenMode')\n\n    } else {\n            tap(() => this.buttonText = 'DarkMode')\n    }\n  }\n}\n","<ng-container #contentToReuse>\n<div class=\"face-snap-card\"\n[ngClass]=\"{snapped : buttonText === 'DarkMode'}\"\n*ngIf=\"faceSnap$ | async as faceSnap\">\n<h2>{{ faceSnap.title | titlecase }}</h2>\n<button routerLink=\"/culinaire\" style=\"color:white\">Back</button>\n<img [src]=\"faceSnap.imageUrl\" [alt]=\"faceSnap.title\" >\n<p>{{ faceSnap.description }}</p>\n<p style=\"color: rgb(199, 86, 86)\">Mise en ligne le {{ faceSnap.createdDate | date: 'longDate'}}</p>\n<p>\n  <!-- <button style=\"color:white\" (click)=\"onSnap(faceSnap.id)\">{{buttonText}}</button> -->\n <!-- <span [ngStyle]=\"{ color: 'rgb(0,'+ faceSnap.snaps +',0)'}\"> {{ faceSnap.snaps }}</span> -->\n</p>\n</div>\n</ng-container>"],"mappings":"AAGA,SAAqBA,GAAG,QAAQ,MAAM;;;;;;;;;;;;ICFtCC,EAAA,CAAAC,cAAA,aAEsC;IAClCD,EAAA,CAAAE,MAAA,GAAgC;;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzCH,EAAA,CAAAC,cAAA,gBAAoD;IAAAD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACjEH,EAAA,CAAAI,SAAA,aAAuD;IACvDJ,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACjCH,EAAA,CAAAC,cAAA,WAAmC;IAAAD,EAAA,CAAAE,MAAA,IAA6D;;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACpGH,EAAA,CAAAI,SAAA,SAGI;IACJJ,EAAA,CAAAG,YAAA,EAAM;;;;;IAXNH,EAAA,CAAAK,UAAA,YAAAL,EAAA,CAAAM,eAAA,KAAAC,GAAA,EAAAC,MAAA,CAAAC,UAAA,iBAAiD;IAE7CT,EAAA,CAAAU,SAAA,GAAgC;IAAhCV,EAAA,CAAAW,iBAAA,CAAAX,EAAA,CAAAY,WAAA,OAAAC,WAAA,CAAAC,KAAA,EAAgC;IAE/Bd,EAAA,CAAAU,SAAA,GAAyB;IAAzBV,EAAA,CAAAK,UAAA,QAAAQ,WAAA,CAAAE,QAAA,EAAAf,EAAA,CAAAgB,aAAA,CAAyB,QAAAH,WAAA,CAAAC,KAAA;IAC3Bd,EAAA,CAAAU,SAAA,GAA0B;IAA1BV,EAAA,CAAAW,iBAAA,CAAAE,WAAA,CAAAI,WAAA,CAA0B;IACMjB,EAAA,CAAAU,SAAA,GAA6D;IAA7DV,EAAA,CAAAkB,kBAAA,sBAAAlB,EAAA,CAAAmB,WAAA,QAAAN,WAAA,CAAAO,WAAA,kBAA6D;;;ADKhG,OAAM,MAAOC,wBAAwB;EAInCC,YACWC,gBAAoC,EACrCC,KAAsB;IADrB,KAAAD,gBAAgB,GAAhBA,gBAAgB;IACjB,KAAAC,KAAK,GAALA,KAAK;EACX;EAEJC,QAAQA,CAAA;IACN,IAAI,CAAChB,UAAU,GAAE,UAAU;IAC3B,MAAMiB,WAAW,GAAG,CAAC,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACrD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACN,gBAAgB,CAACO,gBAAgB,CAACJ,WAAW,CAAC;EACtE;EACAK,MAAMA,CAACC,UAAkB;IACvB,IAAI,IAAI,CAACvB,UAAU,KAAK,UAAU,EAAE;MAC5BV,GAAG,CAAC,MAAM,IAAI,CAACU,UAAU,GAAG,WAAW,CAAC;KAE/C,MAAM;MACCV,GAAG,CAAC,MAAM,IAAI,CAACU,UAAU,GAAG,UAAU,CAAC;;EAEjD;EAAC,QAAAwB,CAAA,G;qBArBUZ,wBAAwB,EAAArB,EAAA,CAAAkC,iBAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAApC,EAAA,CAAAkC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAxBlB,wBAAwB;IAAAmB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCbrC9C,EAAA,CAAAgD,uBAAA,YAA8B;QAC9BhD,EAAA,CAAAiD,UAAA,IAAAC,uCAAA,mBAYM;;QACNlD,EAAA,CAAAmD,qBAAA,EAAe;;;QAXdnD,EAAA,CAAAU,SAAA,GAAwB;QAAxBV,EAAA,CAAAK,UAAA,SAAAL,EAAA,CAAAY,WAAA,OAAAmC,GAAA,CAAAlB,SAAA,EAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}