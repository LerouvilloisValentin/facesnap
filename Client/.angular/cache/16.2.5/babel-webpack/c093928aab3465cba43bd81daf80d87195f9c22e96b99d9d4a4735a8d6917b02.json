{"ast":null,"code":"import { map, switchMap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CulinaireServices {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllCulinaire() {\n    return this.http.get('http://localhost:3000/culinaire');\n  }\n  getFaceSnapById(culinairepId) {\n    return this.http.get(`http://localhost:3000/culinaire/${faceSnapId}`);\n  }\n  snapFaceSnapById(faceSnapId, snapType) {\n    return this.getFaceSnapById(faceSnapId).pipe(map(faceSnap => ({\n      ...faceSnap,\n      snaps: faceSnap.snaps + (snapType === 'snap' ? 1 : -1)\n    })), switchMap(updateFaceSnap => this.http.put(`http://localhost:3000/facesnaps/${faceSnapId}`, updateFaceSnap)));\n  }\n  static #_ = this.ɵfac = function CulinaireServices_Factory(t) {\n    return new (t || CulinaireServices)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CulinaireServices,\n    factory: CulinaireServices.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","switchMap","CulinaireServices","constructor","http","getAllCulinaire","get","getFaceSnapById","culinairepId","faceSnapId","snapFaceSnapById","snapType","pipe","faceSnap","snaps","updateFaceSnap","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\code\\snapface\\client\\src\\app\\core\\services\\culinaire.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { FaceSnap } from \"../models/face-snap.models\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, map, switchMap } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class CulinaireServices {\r\n  faceSnap! : FaceSnap\r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n  getAllCulinaire(): Observable<FaceSnap[]> {\r\n    return this.http.get<FaceSnap[]>('http://localhost:3000/culinaire')\r\n  }\r\n\r\n  getFaceSnapById(culinairepId: number): Observable<FaceSnap> {\r\n    return this.http.get<FaceSnap>(`http://localhost:3000/culinaire/${faceSnapId}`)\r\n\r\n  }\r\n  snapFaceSnapById(faceSnapId: number, snapType: 'snap' | 'unsnap'): Observable<FaceSnap> {\r\n    return this.getFaceSnapById(faceSnapId).pipe(\r\n      map(faceSnap => ({\r\n        ...faceSnap,\r\n        snaps: faceSnap.snaps + (snapType === 'snap'? 1 : -1)\r\n      })),\r\n      switchMap(updateFaceSnap => this.http.put<FaceSnap>(`http://localhost:3000/facesnaps/${faceSnapId}`, updateFaceSnap))\r\n    )\r\n  }\r\n\r\n\r\n  // addFaceSnap(formValue: { title: string, description: string, imageUrl: string, location?: string }) : Observable<FaceSnap> {\r\n  //  return this.getAllFaceSnaps().pipe(\r\n  //   map(facesnaps => [...facesnaps].sort((a:FaceSnap, b: FaceSnap) => a.id - b.id)),\r\n  //   map(sortedFacesnaps => sortedFacesnaps[sortedFacesnaps.length - 1]),\r\n  //   map(previousFacesnaps => ({\r\n  //     ...formValue,\r\n  //     snaps:0,\r\n  //     createdDate: new Date(),\r\n  //     id: previousFacesnaps.id + 1\r\n  //   })),\r\n  //   switchMap(newFacesnap=> this.http.post<FaceSnap>('http://localhost:3000/facesnaps', newFacesnap))\r\n  //  )\r\n  // }\r\n}\r\n"],"mappings":"AAGA,SAAqBA,GAAG,EAAEC,SAAS,QAAQ,MAAM;;;AAKjD,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAc;EAEtCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,iCAAiC,CAAC;EACrE;EAEAC,eAAeA,CAACC,YAAoB;IAClC,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAW,mCAAmCG,UAAU,EAAE,CAAC;EAEjF;EACAC,gBAAgBA,CAACD,UAAkB,EAAEE,QAA2B;IAC9D,OAAO,IAAI,CAACJ,eAAe,CAACE,UAAU,CAAC,CAACG,IAAI,CAC1CZ,GAAG,CAACa,QAAQ,KAAK;MACf,GAAGA,QAAQ;MACXC,KAAK,EAAED,QAAQ,CAACC,KAAK,IAAIH,QAAQ,KAAK,MAAM,GAAE,CAAC,GAAG,CAAC,CAAC;KACrD,CAAC,CAAC,EACHV,SAAS,CAACc,cAAc,IAAI,IAAI,CAACX,IAAI,CAACY,GAAG,CAAW,mCAAmCP,UAAU,EAAE,EAAEM,cAAc,CAAC,CAAC,CACtH;EACH;EAAC,QAAAE,CAAA,G;qBArBUf,iBAAiB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBpB,iBAAiB;IAAAqB,OAAA,EAAjBrB,iBAAiB,CAAAsB,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}