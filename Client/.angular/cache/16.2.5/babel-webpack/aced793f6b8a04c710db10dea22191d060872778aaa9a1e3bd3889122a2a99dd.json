{"ast":null,"code":"import { map, switchMap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FaceSnapsServices {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllFaceSnaps() {\n    return this.http.get('http://localhost:3000/facesnaps');\n  }\n  getFaceSnapById(faceSnapId) {\n    return this.http.get(`http://localhost:3000/facesnaps/${faceSnapId}`);\n  }\n  snapFaceSnapById(faceSnapId, snapType) {\n    return this.getFaceSnapById(faceSnapId).pipe(map(faceSnap => ({\n      ...faceSnap,\n      snaps: faceSnap.snaps + (snapType === 'snap' ? 1 : -1)\n    })), switchMap(updateFaceSnap => this.http.put(`http://localhost:3000/facesnaps/${faceSnapId}`, updateFaceSnap)));\n  }\n  addFaceSnap(formValue) {\n    return this.getAllFaceSnaps().pipe(map(this.facesnaps, [...this.facesnaps].sort(a, faceSnap, b, faceSnap), a.id - b.id), map(sortedFacesnaps => sortedFacesnaps[sortedFacesnaps.lenght - 1]), map(previousFacesnaps => ({\n      ...formValue,\n      snaps: 0,\n      createdDate: new Date(),\n      id: previousFacesnaps.Id + 1\n    })));\n  }\n  static #_ = this.ɵfac = function FaceSnapsServices_Factory(t) {\n    return new (t || FaceSnapsServices)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FaceSnapsServices,\n    factory: FaceSnapsServices.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","switchMap","FaceSnapsServices","constructor","http","getAllFaceSnaps","get","getFaceSnapById","faceSnapId","snapFaceSnapById","snapType","pipe","faceSnap","snaps","updateFaceSnap","put","addFaceSnap","formValue","facesnaps","sort","a","b","id","sortedFacesnaps","lenght","previousFacesnaps","createdDate","Date","Id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\code\\snapface\\client\\src\\app\\services\\face-snap.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { FaceSnap } from \"../models/face-snap.models\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, map, switchMap } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class FaceSnapsServices {\r\n  faceSnap! : FaceSnap\r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n  getAllFaceSnaps(): Observable<FaceSnap[]> {\r\n    return this.http.get<FaceSnap[]>('http://localhost:3000/facesnaps')\r\n  }\r\n\r\n  getFaceSnapById(faceSnapId: number): Observable<FaceSnap> {\r\n    return this.http.get<FaceSnap>(`http://localhost:3000/facesnaps/${faceSnapId}`)\r\n\r\n  }\r\n  snapFaceSnapById(faceSnapId: number, snapType: 'snap' | 'unsnap'): Observable<FaceSnap> {\r\n    return this.getFaceSnapById(faceSnapId).pipe(\r\n      map(faceSnap => ({\r\n        ...faceSnap,\r\n        snaps: faceSnap.snaps + (snapType === 'snap'? 1 : -1)\r\n      })),\r\n      switchMap(updateFaceSnap => this.http.put<FaceSnap>(`http://localhost:3000/facesnaps/${faceSnapId}`, updateFaceSnap))\r\n    )\r\n  }\r\n\r\n\r\n  addFaceSnap(formValue: { title: string, description: string, imageUrl: string, location?: string }) : Observable<FaceSnap> {\r\n   return this.getAllFaceSnaps().pipe(\r\n    map(this.facesnaps => [...this.facesnaps].sort(a:faceSnap, b: faceSnap) => a.id -b.id),\r\n    map(sortedFacesnaps => sortedFacesnaps[sortedFacesnaps.lenght - 1]),\r\n    map(previousFacesnaps => ({\r\n      ...formValue,\r\n      snaps:0,\r\n      createdDate: new Date(),\r\n      id: previousFacesnaps.Id + 1\r\n    }))\r\n   )\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAAqBA,GAAG,EAAEC,SAAS,QAAQ,MAAM;;;AAKjD,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAc;EAEtCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,iCAAiC,CAAC;EACrE;EAEAC,eAAeA,CAACC,UAAkB;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAW,mCAAmCE,UAAU,EAAE,CAAC;EAEjF;EACAC,gBAAgBA,CAACD,UAAkB,EAAEE,QAA2B;IAC9D,OAAO,IAAI,CAACH,eAAe,CAACC,UAAU,CAAC,CAACG,IAAI,CAC1CX,GAAG,CAACY,QAAQ,KAAK;MACf,GAAGA,QAAQ;MACXC,KAAK,EAAED,QAAQ,CAACC,KAAK,IAAIH,QAAQ,KAAK,MAAM,GAAE,CAAC,GAAG,CAAC,CAAC;KACrD,CAAC,CAAC,EACHT,SAAS,CAACa,cAAc,IAAI,IAAI,CAACV,IAAI,CAACW,GAAG,CAAW,mCAAmCP,UAAU,EAAE,EAAEM,cAAc,CAAC,CAAC,CACtH;EACH;EAGAE,WAAWA,CAACC,SAAsF;IACjG,OAAO,IAAI,CAACZ,eAAe,EAAE,CAACM,IAAI,CACjCX,GAAG,CAAC,IAAI,CAACkB,SAAS,EAAI,CAAC,GAAG,IAAI,CAACA,SAAS,CAAC,CAACC,IAAI,CAACC,CAAC,EAACR,QAAQ,EAAES,CAAC,EAAET,QAAQ,CAAC,EAAIQ,CAAC,CAACE,EAAE,GAAED,CAAC,CAACC,EAAE,CAAC,EACtFtB,GAAG,CAACuB,eAAe,IAAIA,eAAe,CAACA,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,EACnExB,GAAG,CAACyB,iBAAiB,KAAK;MACxB,GAAGR,SAAS;MACZJ,KAAK,EAAC,CAAC;MACPa,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBL,EAAE,EAAEG,iBAAiB,CAACG,EAAE,GAAG;KAC5B,CAAC,CAAC,CACH;EACF;EAAC,QAAAC,CAAA,G;qBAnCU3B,iBAAiB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBhC,iBAAiB;IAAAiC,OAAA,EAAjBjC,iBAAiB,CAAAkC,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}