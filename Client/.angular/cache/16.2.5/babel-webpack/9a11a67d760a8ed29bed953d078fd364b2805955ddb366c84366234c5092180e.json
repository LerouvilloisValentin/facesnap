{"ast":null,"code":"import { map, switchMap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GameServices = /*#__PURE__*/(() => {\n  class GameServices {\n    constructor(http) {\n      this.http = http;\n    }\n    getAllGame() {\n      return this.http.get('http://localhost:3000/game');\n    }\n    getGameById(GameId) {\n      return this.http.get(`http://localhost:3000/game/${GameId}`);\n    }\n    // snapFaceSnapById(faceSnapId: number, snapType: 'snap' | 'unsnap'): Observable<FaceSnap> {\n    //   return this.getFaceSnapById(faceSnapId).pipe(\n    //     map(faceSnap => ({\n    //       ...faceSnap,\n    //       snaps: faceSnap.snaps + (snapType === 'snap'? 1 : -1)\n    //     })),\n    //     switchMap(updateFaceSnap => this.http.put<FaceSnap>(`http://localhost:3000/facesnaps/${faceSnapId}`, updateFaceSnap))\n    //   )\n    // }\n    addGameExp(formValue) {\n      return this.getAllGame().pipe(map(facesnaps => [...facesnaps].sort((a, b) => a.id - b.id)), map(sortedFacesnaps => sortedFacesnaps[sortedFacesnaps.length - 1]), map(previousFacesnaps => ({\n        ...formValue,\n        snaps: 0,\n        createdDate: new Date(),\n        id: previousFacesnaps.id + 1\n      })), switchMap(newFacesnap => this.http.post('http://localhost:3000/game', newFacesnap)));\n    }\n    static #_ = this.ɵfac = function GameServices_Factory(t) {\n      return new (t || GameServices)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GameServices,\n      factory: GameServices.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return GameServices;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}